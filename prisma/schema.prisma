generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id             String               @id @db.VarChar(255)
  cnpj           String               @unique @db.VarChar(255)
  nome_fantasia  String               @db.VarChar(255)
  razao_social   String               @db.VarChar(255)
  proprietarioId String               @db.VarChar(255)
  Proprietario   Proprietario         @relation(fields: [proprietarioId], references: [id])
  produto        Produto[]
  colaboradores  EmpresaColaborador[]
  endereco       Endereco[]

  @@index([proprietarioId], map: "Empresa_proprietarioId_fkey")
}

model Proprietario {
  id              String               @id @db.VarChar(255)
  nome            String               @db.VarChar(255)
  sobrenome       String               @db.VarChar(255)
  email           String               @unique @db.VarChar(255)
  senha           String               @db.VarChar(255)
  // data_nascimento DateTime?            @db.Date()
  data_cadastro   DateTime             @default(now()) @db.Timestamp(0)
  cpf             String               @unique @db.VarChar(255)
  empresa         Empresa[]
  colaboradres    EmpresaColaborador[]
}

model EmpresaColaborador {
  colaborador   Proprietario @relation(fields: [colaboradorId], references: [id])
  colaboradorId String       @unique
  empresaId     String
  empresa       Empresa      @relation(fields: [empresaId], references: [id])
  admin         Boolean

  @@id([colaboradorId, empresaId])
}

model Endereco {
  id        Int      @id @default(autoincrement())
  cep       String   @db.VarChar(255)
  bairro    String   @db.VarChar(255)
  rua       String   @db.VarChar(255)
  num       String   @db.VarChar(255)
  refer     String?  @db.VarChar(255)
  Empresa   Empresa? @relation(fields: [empresaId], references: [id])
  empresaId String?  @db.VarChar(255)
  cidadeId  String
  cidade    Cidade   @relation(fields: [cidadeId], references: [id])
}

model Cidade {
  id       String     @id @default(uuid())
  nome     String
  endereco Endereco[]
  estadoId String
  estado   Estado     @relation(fields: [estadoId], references: [id])
}

model Estado {
  id          String   @id @default(uuid())
  estado_nome String
  cidades     Cidade[]
}

model Produto {
  id          String     @id @default(uuid()) @db.VarChar(255)
  nome        String     @db.VarChar(255)
  descricao   String     @db.Text
  ncm         String     @db.VarChar(255)
  empresaId   String?
  empresa     Empresa?   @relation(fields: [empresaId], references: [id])
  categoriaId String?
  categoria   Categoria? @relation(fields: [categoriaId], references: [id])
}

model Categoria {
  id             String    @id @default(uuid())
  categoria_nome String
  produtos       Produto[]
  sub_1_Id       String?
  subCategoria1  Sub_1?    @relation(fields: [sub_1_Id], references: [id])
}

model Sub_1 {
  id            String      @id @default(uuid())
  nome_sub1     String
  sub_2_Id      String?
  subCategoria2 Sub_2?      @relation(fields: [sub_2_Id], references: [id])
  categorias    Categoria[]
}

model Sub_2 {
  id        String  @id @default(uuid())
  nome_sub2 String
  sub_1     Sub_1[]
}
